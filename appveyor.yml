#----------------------------------------------------------------------------
# WARNING: The file appveyor.yml is produced by CMake. If you want to make
#          some changes in this file please use the templated version
#          appveyor.yml.in and rerun cmake to produce a refreshed
#          version of appveyor.yml
#
# Note:    MMEX version changes are made in the file: ./CMakeLists.txt
#----------------------------------------------------------------------------

version: 1.3.{build}

pull_requests:
  do_not_increment_build_number: true

image: Visual Studio 2015
configuration: Release
platform:
  - Win32
  - x64

matrix:
  fast_finish: true

environment:
  wxwin: c:\projects\wxwidgets
  # GETTEXT library can be obtained normaly via official
  # https://www.gnu.org/software/gettext/
  # where is mentioned that for windows it can be downloaded from
  # https://mlocati.github.io/articles/gettext-iconv-windows.html

  # But for appveyor we need to install cygwin that contains
  # embeded GETTEXT library
  path: C:\cygwin64\bin;C:\cygwin\bin;%path%

build_script:
# wxWidgets
# https://wiki.wxwidgets.org/Compiling_Using_MSVC_On_The_Commandline
- if /I "%PLATFORM%" == "Win32" call "c:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat"
- if /I "%PLATFORM%" == "x64" call "c:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x64
- if /I "%PLATFORM%" == "Win32" SET WXLIBFOLDER=vc_lib
- if /I "%PLATFORM%" == "x64" SET WXLIBFOLDER=vc_x64_lib
- echo "PLATFORM = %PLATFORM%"
- echo "WXLIBFOLDER = %WXLIBFOLDER%"
- git clone -b "v3.1.0" https://github.com/wxWidgets/wxWidgets.git %WXWIN%
- if exist %APPVEYOR_BUILD_FOLDER%\%WXLIBFOLDER%.zip (echo "unpacking wxWidgets from cache" & 7z x %APPVEYOR_BUILD_FOLDER%\%WXLIBFOLDER%.zip -o%WXWIN%\lib\%WXLIBFOLDER%)
- if not exist %WXWIN%\lib\%WXLIBFOLDER% (echo "building wxWidgets" & cd build/msw & nmake /f "%WXWIN%\build\msw\makefile.vc" TARGET_CPU=%PLATFORM% BUILD=release)
- if not exist %APPVEYOR_BUILD_FOLDER%\%WXLIBFOLDER%.zip (echo "packing wxWidgets to cache" & 7z a %APPVEYOR_BUILD_FOLDER%\%WXLIBFOLDER%.zip %WXWIN%\lib\%WXLIBFOLDER%\*)
# MMEX
- cd %APPVEYOR_BUILD_FOLDER%\build
- mkdir release
- cd release
- git submodule update --init
- cmake -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=Release ..\..\
- nmake /f Makefile TARGET_CPU=%PLATFORM% BUILD=release
- cpack .

cache:
- '%APPVEYOR_BUILD_FOLDER%\vc_lib.zip'
- '%APPVEYOR_BUILD_FOLDER%\vc_x64_lib.zip'

artifacts:
  - path: 'build\release\*.exe'
    name: StandardApp
  - path: 'build\release\*.zip'
    name: PortableApp

after_build:
- if /I "%PLATFORM%" == "Win32" appveyor PushArtifact "mmex-1.4.0-ALPHA.exe" -FileName "mmex-1.4.0-ALPHA-win32_build%appveyor_build_number%.exe"
- if /I "%PLATFORM%" == "x64" appveyor PushArtifact "mmex-1.4.0-ALPHA.exe" -FileName "mmex-1.4.0-ALPHA-win64_build%appveyor_build_number%.exe"
- if /I "%PLATFORM%" == "Win32" appveyor PushArtifact "mmex-1.4.0-ALPHA.zip" -FileName "mmex-1.4.0-ALPHA-win32_portable_build%appveyor_build_number%.zip"
- if /I "%PLATFORM%" == "x64" appveyor PushArtifact "mmex-1.4.0-ALPHA.zip" -FileName "mmex-1.4.0-ALPHA-win64_portable_build%appveyor_build_number%.zip"

deploy:
  description: 'Release description'
  provider: GitHub
  artifact: build\release\*.exe, build\release\*.zip
  draft: false                              
  prerelease: false                               
  on:                                                   
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only
