language: cpp
dist: trusty
sudo: required
services: [ docker ]
git: { depth: 10 } # don't clone all history from repo, leave 10 for build queue
os: linux # default build params for matrix
compiler: gcc

env:
  global:
  - MAKEFLAGS=-j4
  - BUILD_TYPE=Release
  matrix:
  # targets for linux
  - OS=debian DIST=jessie
  - OS=debian DIST=stretch
  - OS=ubuntu DIST=xenial
  - OS=ubuntu DIST=zesty
  - OS=ubuntu DIST=artful
  - OS=fedora DIST=24
  - OS=fedora DIST=25
  - OS=fedora DIST=26
  - OS=opensuse DIST=42.1
  - OS=opensuse DIST=42.2
  - OS=opensuse DIST=42.3
  - OS=archlinux
  - OS=ubuntu DIST=zesty BUILD_TYPE=Debug

matrix:
  fast_finish: true
  include: # add non-linux targets
  - os: osx
    env: OS=macos
    compiler: gcc
  allow_failures:
  - env: OS=debian DIST=jessie
  - env: OS=ubuntu DIST=xenial
  - env: OS=ubuntu DIST=artful
  - env: OS=fedora DIST=24
  - env: OS=fedora DIST=25
  - env: OS=fedora DIST=26
  - env: OS=opensuse DIST=42.1
  - env: OS=opensuse DIST=42.2
  - env: OS=opensuse DIST=42.3
  - env: OS=archlinux
  - env: OS=ubuntu DIST=zesty BUILD_TYPE=Debug

install:
- DOCKER=moneymanagerex/mmex_build_env:$OS${DIST:+.$DIST}
- if [ $TRAVIS_OS_NAME = linux ]; then docker pull ${DOCKER}; docker build dockers/$OS${DIST:+.$DIST} --cache-from ${DOCKER} -t ${DOCKER}; fi
- if [ $TRAVIS_OS_NAME = osx ]; then brew update; fi
- if [ $TRAVIS_OS_NAME = osx ]; then brew install wxmac; fi
- if [ $TRAVIS_OS_NAME = osx ]; then brew install gettext && brew link --force gettext; fi
- mkdir build && cd build

script:
- if [ $TRAVIS_OS_NAME = linux ]; then docker run -it --rm -w /moneymanagerex/build -e MAKEFLAGS -v $TRAVIS_BUILD_DIR:/moneymanagerex ${DOCKER} bash -c "cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE .. && make package"; fi
- if [ $TRAVIS_OS_NAME = osx ]; then cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE .. && make package; fi

notifications: # set notification options
  email:
    recipients:
      - developers@moneymanagerex.org
    on_success: change # change is when the repo status goes from pass to fail or vice versa
    on_failure: always

after_success:
# Generate checksums
- if [ $TRAVIS_OS_NAME = osx ]; then sha=gsha512sum; else sha=sha512sum; fi
- shopt -s nullglob; for p in *.{deb,rpm,dmg,pkg.tar.xz}; do ${sha} $p | tee $p.sha512; done

# Set encrypted variable 'GitHub_auth_token' in Travis repo settings to deploy packages
# for tagged commits to GitHub Releases.
# Set encrypted variable 'PACKAGECLOUD_TOKEN' in Travis repo settings to deploy packages
# for tagged commits to packagecloud repo.
deploy:
- provider: releases
  api_key: $GitHub_auth_token
  file_glob: true
  file: $TRAVIS_BUILD_DIR/build/*.{deb,rpm,dmg,pkg.tar.xz,sha512}
  skip_cleanup: true
  on: # Set deploy conditions
      # Deploy only when tag is specified
      tags: true
      # and only when API token is set
      condition: "${#GitHub_auth_token} != 0 && $BUILD_TYPE = Release"
- provider: packagecloud
  repository: ${TRAVIS_REPO_SLUG#*/}
  username: ${TRAVIS_REPO_SLUG%/*}
  token: $PACKAGECLOUD_TOKEN
  dist: $OS/$DIST
  package_glob: $TRAVIS_BUILD_DIR/build/*.{deb,rpm}
  skip_cleanup: true
  on: # Set deploy conditions
      # Deploy only when tag is specified
      tags: true
      # and only packages generated by gcc from Linux
      # and only when API token is set
      condition: "$TRAVIS_OS_NAME = linux && ${#DIST} != 0 && ${#PACKAGECLOUD_TOKEN} != 0 && $BUILD_TYPE = Release"
